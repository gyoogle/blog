(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{335:function(t,a,s){"use strict";s.r(a);var n=s(12),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"java-직렬화-serialization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-직렬화-serialization"}},[t._v("#")]),t._v(" [Java] 직렬화(Serialization)")]),t._v(" "),a("br"),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("자바 시스템 내부에서 사용되는 객체 또는 데이터를 외부의 자바 시스템에서도 사용할 수 있도록 바이트(byte) 형태로 데이터 변환하는 기술\n")])])]),a("br"),t._v(" "),a("p",[t._v("각자 PC의 OS마다 서로 다른 가상 메모리 주소 공간을 갖기 때문에, Reference Type의 데이터들은 인스턴스를 전달 할 수 없다.")]),t._v(" "),a("p",[t._v("따라서, 이런 문제를 해결하기 위해선 주소값이 아닌 Byte 형태로 직렬화된 객체 데이터를 전달해야 한다.")]),t._v(" "),a("p",[t._v("직렬화된 데이터들은 모두 Primitive Type(기본형)이 되고, 이는 파일 저장이나 네트워크 전송 시 파싱이 가능한 유의미한 데이터가 된다. 따라서, 전송 및 저장이 가능한 데이터로 만들어주는 것이 바로 **직렬화(Serialization)**이라고 말할 수 있다.")]),t._v(" "),a("br"),t._v(" "),a("img",{attrs:{src:"https://i0.wp.com/techvidvan.com/tutorials/wp-content/uploads/sites/2/2020/05/Serialization-and-Deserialization-in-Java.jpg?w=802&ssl=1"}}),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"직렬화-조건"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#직렬화-조건"}},[t._v("#")]),t._v(" 직렬화 조건")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("자바에서는 간단히 "),a("code",[t._v("java.io.Serializable")]),t._v(" 인터페이스 구현으로 직렬화/역직렬화가 가능하다.")]),t._v(" "),a("blockquote",[a("p",[t._v("역직렬화는 직렬화된 데이터를 받는쪽에서 다시 객체 데이터로 변환하기 위한 작업을 말한다.")])]),t._v(" "),a("p",[a("strong",[t._v("직렬화 대상")]),t._v(" : 인터페이스 상속 받은 객체, Primitive 타입의 데이터")]),t._v(" "),a("p",[t._v("Primitive 타입이 아닌 Reference 타입처럼 주소값을 지닌 객체들은 바이트로 변환하기 위해 Serializable 인터페이스를 구현해야 한다.")]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"직렬화-상황"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#직렬화-상황"}},[t._v("#")]),t._v(" 직렬화 상황")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("JVM에 상주하는 객체 데이터를 영속화할 때 사용")]),t._v(" "),a("li",[t._v("Servlet Session")]),t._v(" "),a("li",[t._v("Cache")]),t._v(" "),a("li",[t._v("Java RMI(Remote Method Invocation)")])]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"직렬화-구현"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#직렬화-구현"}},[t._v("#")]),t._v(" 직렬화 구현")]),t._v(" "),a("hr"),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Entity")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AllArgsConstructor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@toString")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Post")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" serialVersionUID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("serialVersionUID")]),t._v("를 만들어준다.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Post")]),t._v(" post "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"제목"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"내용"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" serializedPost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteArrayOutputStream")]),t._v(" baos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteArrayOutputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectOutputStream")]),t._v(" oos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectOutputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("baos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        oos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        serializedPost "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" baos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toByteArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("ObjectOutputStream")]),t._v("으로 직렬화를 진행한다. Byte로 변환된 값을 저장하면 된다.")]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"역직렬화-예시"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#역직렬화-예시"}},[t._v("#")]),t._v(" 역직렬화 예시")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteArrayInputStream")]),t._v(" bais "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteArrayInputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializedPost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectInputStream")]),t._v(" ois "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectInputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bais"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" objectPost "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ois"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Post")]),t._v(" post "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" objectPost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("ObjectInputStream")]),t._v("로 역직렬화를 진행한다. Byte의 값을 다시 객체로 저장하는 과정이다.")]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"직렬화-serialversionuid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#직렬화-serialversionuid"}},[t._v("#")]),t._v(" 직렬화 serialVersionUID")]),t._v(" "),a("p",[t._v("위의 코드에서 "),a("code",[t._v("serialVersionUID")]),t._v("를 직접 설정했었다. 사실 선언하지 않아도, 자동으로 해시값이 할당된다.")]),t._v(" "),a("p",[t._v("직접 설정한 이유는 기존의 클래스 멤버 변수가 변경되면 "),a("code",[t._v("serialVersionUID")]),t._v("가 달라지는데, 역직렬화 시 달라진 넘버로 Exception이 발생될 수 있다.")]),t._v(" "),a("p",[t._v("따라서 직접 "),a("code",[t._v("serialVersionUID")]),t._v("을 관리해야 클래스의 변수가 변경되어도 직렬화에 문제가 발생하지 않게 된다.")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("serialVersionUID")]),t._v("을 관리하더라도, 멤버 변수의 타입이 다르거나, 제거 혹은 변수명을 바꾸게 되면 Exception은 발생하지 않지만 데이터가 누락될 수 있다.")])]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"요약"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#요약"}},[t._v("#")]),t._v(" 요약")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("데이터를 통신 상에서 전송 및 저장하기 위해 직렬화/역직렬화를 사용한다.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("serialVersionUID")]),t._v("는 개발자가 직접 관리한다.")])]),t._v(" "),a("li",[a("p",[t._v("클래스 변경을 개발자가 예측할 수 없을 때는 직렬화 사용을 지양한다.")])]),t._v(" "),a("li",[a("p",[t._v("개발자가 직접 컨트롤 할 수 없는 클래스(라이브러리 등)는 직렬화 사용을 지양한다.")])]),t._v(" "),a("li",[a("p",[t._v("자주 변경되는 클래스는 직렬화 사용을 지양한다.")])]),t._v(" "),a("li",[a("p",[t._v("역직렬화에 실패하는 상황에 대한 예외처리는 필수로 구현한다.")])]),t._v(" "),a("li",[a("p",[t._v("직렬화 데이터는 타입, 클래스 메타정보를 포함하므로 사이즈가 크다. 트래픽에 따라 비용 증가 문제가 발생할 수 있기 때문에 JSON 포맷으로 변경하는 것이 좋다.")]),t._v(" "),a("blockquote",[a("p",[t._v("JSON 포맷이 직렬화 데이터 포맷보다 2~10배 더 효율적")])])])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h4",{attrs:{id:"참고자료"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#참고자료"}},[t._v("#")]),t._v(" [참고자료]")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://techvidvan.com/tutorials/serialization-in-java/",target:"_blank",rel:"noopener noreferrer"}},[t._v("링크"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://techblog.woowahan.com/2550/",target:"_blank",rel:"noopener noreferrer"}},[t._v("링크"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://ryan-han.com/post/java/serialization/",target:"_blank",rel:"noopener noreferrer"}},[t._v("링크"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);