(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{327:function(a,t,r){"use strict";r.r(t);var s=r(19),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"트랜잭션-transaction"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#트랜잭션-transaction"}},[a._v("#")]),a._v(" 트랜잭션(Transaction)")]),a._v(" "),r("hr"),a._v(" "),r("br"),a._v(" "),r("p",[r("em",[r("strong",[a._v("트렌잭션이란?")])])]),a._v(" "),r("blockquote",[r("p",[a._v("데이터베이스의 상태를 변화시키기 위해 수행하는 작업 단위")])]),a._v(" "),r("p",[a._v("상태를 변화시킨다는 것 → "),r("strong",[a._v("SQL 질의어를 통해 DB에 접근하는 것")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("- SELECT\n- INSERT\n- DELETE\n- UPDATE\n")])])]),r("p",[a._v("작업 단위 → "),r("strong",[a._v("많은 SQL 명령문들을 사람이 정하는 기준에 따라 정하는 것")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("예시) 게시판에서 사용자가 글을 작성하고, 올리기 버튼을 누른 후 게시판에 다시 돌아오면 게시판에 내가 쓴 글이 업데이트 된 상태를 볼 수 있다.\n\n* 이때 DB 작업\n- 올리기 버튼을 누른다 : INSERT문을 사용해 사용자가 입력한 게시글 데이터를 옮김\n- 게시판 새로 구성 : SELECT문을 사용해 최신 정보를 유지\n\n현재 작업 단위 : INSERT문 + SELECT문\n\n→ 이를 통틀어 하나의 트랜잭션이라고 한다.\n")])])]),r("p",[r("strong",[a._v("즉, 하나의 트랜잭션 설계를 잘 만드는 것이 데이터를 다룰 때 많은 이점을 가져다준다.")])]),a._v(" "),r("h3",{attrs:{id:"트랜잭션-특징"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#트랜잭션-특징"}},[a._v("#")]),a._v(" 트랜잭션 특징")]),a._v(" "),r("hr"),a._v(" "),r("ul",[r("li",[r("h4",{attrs:{id:"원자성-atomicity"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#원자성-atomicity"}},[a._v("#")]),a._v(" 원자성(Atomicity)")])])]),a._v(" "),r("p",[a._v("트랜잭션이 DB에 모두 반영되거나, 혹은 전혀 반영되지 않아야 된다.")]),a._v(" "),r("ul",[r("li",[r("h4",{attrs:{id:"일관성-consistency"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#일관성-consistency"}},[a._v("#")]),a._v(" 일관성(Consistency)")]),a._v(" "),r("p",[a._v("트랜잭션의 작업 처리 결과는 항상 일관성 있어야 한다.")])]),a._v(" "),r("li",[r("h4",{attrs:{id:"독립성-isolation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#독립성-isolation"}},[a._v("#")]),a._v(" 독립성(Isolation)")]),a._v(" "),r("p",[a._v("둘 이상의 트랜잭션이 동시에 병행 실행되고 있을 때, 어떤 트랜잭션도 다른 트랜잭션 연산에 끼어들 수 없다.")])]),a._v(" "),r("li",[r("h4",{attrs:{id:"지속성-durability"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#지속성-durability"}},[a._v("#")]),a._v(" 지속성(Durability)")]),a._v(" "),r("p",[a._v("트랜잭션이 성공적으로 완료되었으면, 결과는 영구적으로 반영되어야 한다.")])])]),a._v(" "),r("h4",{attrs:{id:"commit"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[a._v("#")]),a._v(" Commit")]),a._v(" "),r("p",[a._v("하나의 트랜잭션이 성공적으로 끝났고,  DB가 일관성있는 상태일 때 이를 알려주기 위해 사용하는 연산")]),a._v(" "),r("h4",{attrs:{id:"rollback"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollback"}},[a._v("#")]),a._v(" Rollback")]),a._v(" "),r("p",[a._v("하나의 트랜잭션 처리가 비정상적으로 종료되어 트랜잭션 원자성이 깨진 경우")]),a._v(" "),r("p",[a._v("transaction이 정상적으로 종료되지 않았을 때, last consistent state (예) Transaction의 시작 상태) 로 roll back 할 수 있음.")]),a._v(" "),r("p",[r("em",[a._v("상황이 주어지면 DB 측면에서 어떻게 해결할 수 있을지 대답할 수 있어야 함")])]),a._v(" "),r("hr"),a._v(" "),r("h3",{attrs:{id:"transaction-관리를-위한-dbms의-전략"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#transaction-관리를-위한-dbms의-전략"}},[a._v("#")]),a._v(" Transaction 관리를 위한 DBMS의 전략")]),a._v(" "),r("p",[a._v("이해를 위한 2가지 개념 : DBMS의 구조 / Buffer 관리 정책")]),a._v(" "),r("h4",{attrs:{id:"_1-dbms의-구조"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-dbms의-구조"}},[a._v("#")]),a._v(" 1) DBMS의 구조")]),a._v(" "),r("p",[a._v("크게 2가지 : Query Processor (질의 처리기), Storage System (저장 시스템)")]),a._v(" "),r("p",[a._v("입출력 단위 : 고정 길이의 page 단위로 disk에 읽거나 쓴다.")]),a._v(" "),r("p",[a._v("저장 공간 : 비휘발성 저장 장치인 disk에 저장, 일부분을 Main Memory에 저장")]),a._v(" "),r("img",{attrs:{src:"https://d2.naver.com/content/images/2015/06/helloworld-407507-1.png"}}),a._v(" "),r("h4",{attrs:{id:"_2-page-buffer-manager-or-buffer-manager"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-page-buffer-manager-or-buffer-manager"}},[a._v("#")]),a._v(" 2) Page Buffer Manager or Buffer Manager")]),a._v(" "),r("p",[a._v("DBMS의 Storage System에 속하는 모듈 중 하나로, Main Memory에 유지하는 페이지를 관리하는 모듈")]),a._v(" "),r("blockquote",[r("p",[a._v("Buffer 관리 정책에 따라, UNDO 복구와 REDO 복구가 요구되거나 그렇지 않게 되므로, transaction 관리에 매우 중요한 결정을 가져온다.")])]),a._v(" "),r("h4",{attrs:{id:"_3-undo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-undo"}},[a._v("#")]),a._v(" 3) UNDO")]),a._v(" "),r("p",[a._v("필요한 이유 : 수정된 Page들이 **"),r("u",[a._v("Buffer 교체 알고리즘에 따라서 디스크에 출력")]),a._v("**될 수 있음. Buffer 교체는 "),r("strong",[r("u",[a._v("transaction과는 무관하게 buffer의 상태에 따라서, 결정됨")])]),a._v(". 이로 인해, 정상적으로 종료되지 않은 transaction이 변경한 page들은 원상 복구 되어야 하는데,  이 복구를 undo라고 함.")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("2개의 정책 (수정된 페이지를 디스크에 쓰는 시점으로 분류)")]),a._v(" "),r("p",[a._v("steal : 수정된 페이지를 언제든지 디스크에 쓸 수 있는 정책")]),a._v(" "),r("ul",[r("li",[a._v("대부분의 DBMS가 채택하는 Buffer 관리 정책")]),a._v(" "),r("li",[a._v("UNDO logging과 복구를 필요로 함.")])]),a._v(" "),r("p",[a._v("¬steal : 수정된 페이지들을 EOT (End Of Transaction)까지는 버퍼에 유지하는 정책")]),a._v(" "),r("ul",[r("li",[a._v("UNDO 작업이 필요하지 않지만, 매우 큰 메모리 버퍼가 필요함.")])])])]),a._v(" "),r("h4",{attrs:{id:"_4-redo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-redo"}},[a._v("#")]),a._v(" 4) REDO")]),a._v(" "),r("p",[a._v("이미 commit한 transaction의 수정을 재반영하는 복구 작업")]),a._v(" "),r("p",[a._v("Buffer 관리 정책에 영향을 받음")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("Transaction이 종료되는 시점에 해당 transaction이 수정한 page를 디스크에 쓸 것인가 아닌가로 기준.")]),a._v(" "),r("p",[a._v("FORCE : 수정했던 모든 페이지를 Transaction commit 시점에 disk에 반영")]),a._v(" "),r("p",[a._v("transaction이 commit 되었을 때 수정된 페이지들이 disk 상에 반영되므로 redo 필요 없음.")]),a._v(" "),r("p",[a._v("¬FORCE : commit 시점에 반영하지 않는 정책")]),a._v(" "),r("p",[a._v("transaction이 disk 상의 db에 반영되지 않을 수 있기에 redo 복구가 필요. (대부분의 DBMS 정책)")])])]),a._v(" "),r("p",[r("strong",[a._v("[참고자료]")])]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://d2.naver.com/helloworld/407507",target:"_blank",rel:"noopener noreferrer"}},[a._v("링크"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);