(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{453:function(a,s,t){"use strict";t.r(s);var e=t(12),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"aws-스프링-부트-배포-스크립트-생성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aws-스프링-부트-배포-스크립트-생성"}},[a._v("#")]),a._v(" [AWS] 스프링 부트 배포 스크립트 생성")]),a._v(" "),s("br"),a._v(" "),s("img",{attrs:{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FufFpw%2FbtrfolbIEVG%2F5U2LKUjUUKYKODQwmh7uf0%2Fimg.png"}}),a._v(" "),s("br"),a._v(" "),s("p",[a._v("AWS에서 프로젝트를 배포하는 과정은 프로젝트가 수정할 때마다 똑같은 일을 반복해야한다.")]),a._v(" "),s("h4",{attrs:{id:"프로젝트-배포-과정"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#프로젝트-배포-과정"}},[a._v("#")]),a._v(" 프로젝트 배포 과정")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("git pull")]),a._v("로 프로젝트 업데이트")]),a._v(" "),s("li",[a._v("gradle 프로젝트 빌드")]),a._v(" "),s("li",[a._v("ec2 인스턴스 서버에서 프로젝트 실행 및 배포")])]),a._v(" "),s("br"),a._v(" "),s("p",[a._v("이를 자동화 시킬 수 있다면 편리할 것이다. 따라서 배포에 필요한 쉘 스크립트를 생성해보자.")]),a._v(" "),s("p",[s("code",[a._v("deploy.sh")]),a._v(" 파일을 ec2 상에서 생성하여 아래와 같이 작성한다.")]),a._v(" "),s("br"),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/bin/bash")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("REPOSITORY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/ec2-user/app/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("clone한 프로젝트 저장한 경로"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("PROJECT_NAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("프로젝트명"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$REPOSITORY")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$PROJECT_NAME")]),a._v("/\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> Git Pull"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> 프로젝트 Build 시작"')]),a._v("\n\n./gradlew build\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> step1 디렉토리로 이동"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$REPOSITORY")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> Build 파일 복사"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$REPOSITORY")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$PROJECT_NAME")]),a._v("/build/libs/*.jar "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$REPOSITORY")]),a._v("/\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> 현재 구동중인 애플리케이션 pid 확인"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CURRENT_PID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("pgrep "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("PROJECT_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(".*.jar"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"현재 구동 중인 애플리케이션 pid: '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CURRENT_PID")]),a._v('"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CURRENT_PID")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> 현재 구동 중인 애플리케이션이 없으므로 종료하지 않습니다."')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> kill -15 '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CURRENT_PID")]),a._v('"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("kill")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-15")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CURRENT_PID")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> 새 애플리케이션 배포"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("JAR_NAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tr")]),a._v(" $REPOSITORY/ "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tail")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> JAR Name: '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$JAR_NAME")]),a._v('"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nohup")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dspring.config.location")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("classpath:/application.properties,classpath:/application-real.properties,/home/ec2-user/app/application-oauth.properties,/home/ec2-user/app/application-real-db.properties "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dspring.profiles.active")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("real "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$REPOSITORY")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$JAR_NAME")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("&1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n")])])]),s("br"),a._v(" "),s("p",[a._v("쉘 스크립트 내 경로명 같은 경우에는 사용자의 환경마다 다를 수 있으므로 확인 후 진행하도록 하자.")]),a._v(" "),s("br"),a._v(" "),s("p",[a._v("스크립트 순서대로 간단히 설명하면 아래와 같다.")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("REPOSITORY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/ec2-user/app/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("clone한 프로젝트 저장한 경로"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("PROJECT_NAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("프로젝트명"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("자주 사용하는 프로젝트 명을 변수명으로 저장해둔 것이다.")]),a._v(" "),s("p",[s("code",[a._v("REPOSITORY")]),a._v("는 ec2 서버 내에서 본인이 git 프로젝트를 clone한 곳의 경로로 지정하며, "),s("code",[a._v("PROJECT_NAME")]),a._v("은 해당 프로젝트명을 입력하자.")]),a._v(" "),s("br"),a._v(" "),s("div",{staticClass:"language-SH extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> Git Pull"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> 프로젝트 Build 시작"')]),a._v("\n\n./gradlew build\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> step1 디렉토리로 이동"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$REPOSITORY")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> Build 파일 복사"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$REPOSITORY")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$PROJECT_NAME")]),a._v("/build/libs/*.jar "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$REPOSITORY")]),a._v("/\n")])])]),s("br"),a._v(" "),s("p",[a._v("현재 해당 경로는 clone한 곳이기 때문에 바로 "),s("code",[a._v("git pull")]),a._v("이 가능하다. 프로젝트의 변경사항을 ec2 인스턴스 서버 내의 코드에도 update를 시켜주기 위해 pull을 진행한다.")]),a._v(" "),s("p",[a._v("그 후 프로젝트 빌드를 진행한 뒤, 생성된 jar 파일을 현재 REPOSITORY 경로로 복사해서 가져오도록 설정했다.")]),a._v(" "),s("br"),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CURRENT_PID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("pgrep "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("PROJECT_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(".*.jar"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"현재 구동 중인 애플리케이션 pid: '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CURRENT_PID")]),a._v('"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CURRENT_PID")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> 현재 구동 중인 애플리케이션이 없으므로 종료하지 않습니다."')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> kill -15 '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CURRENT_PID")]),a._v('"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("kill")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-15")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CURRENT_PID")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])])]),s("br"),a._v(" "),s("p",[a._v("기존에 수행 중인 프로젝트를 종료 후 재실행해야 되기 때문에 pid 값을 얻어내 kill 하는 과정을 진행한다.")]),a._v(" "),s("p",[a._v("현재 구동 중인 여부를 확인하기 위해서 "),s("code",[a._v("if else fi")]),a._v("로 체크하게 된다. 만약 존재하면 해당 pid 값에 해당하는 프로세스를 종료시킨다.")]),a._v(" "),s("br"),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"> JAR Name: '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$JAR_NAME")]),a._v('"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nohup")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dspring.config.location")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("classpath:/application.properties,classpath:/application-real.properties,/home/ec2-user/app/application-oauth.properties,/home/ec2-user/app/application-real-db.properties "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dspring.profiles.active")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("real "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$REPOSITORY")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$JAR_NAME")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("&1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n")])])]),s("br"),a._v(" "),s("p",[s("code",[a._v("nohup")]),a._v(" 명령어는 터미널 종료 이후에도 애플리케이션이 계속 구동될 수 있도록 해준다. 따라서 이후에 ec2-user 터미널을 종료해도 현재 실행한 프로젝트 경로에 접속이 가능하다.")]),a._v(" "),s("p",[s("code",[a._v("-Dspring.config.location")]),a._v("으로 처리된 부분은 우리가 git에 프로젝트를 올릴 때 보안상의 이유로 "),s("code",[a._v(".gitignore")]),a._v("로 제외시킨 파일들을 따로 등록하고, jar 내부에 존재하는 properties를 적용하기 위함이다.")]),a._v(" "),s("p",[a._v("예제와 같이 "),s("code",[a._v("application-oauth.properties")]),a._v(", "),s("code",[a._v("application-real-db.properties")]),a._v("는 git으로 올라와 있지 않아 따로 ec2 서버에 사용자가 직접 생성한 외부 파일이므로, 절대경로를 통해 입력해줘야 한다.")]),a._v(" "),s("br"),a._v(" "),s("p",[a._v("프로젝트의 수정사항이 생기면, EC2 인스턴스 서버에서 "),s("code",[a._v("deploy.sh")]),a._v("를 실행해주면, 차례대로 명령어가 실행되면서 수정된 사항을 배포할 수 있다.")]),a._v(" "),s("br"),a._v(" "),s("br"),a._v(" "),s("h4",{attrs:{id:"참고-사항"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#참고-사항"}},[a._v("#")]),a._v(" [참고 사항]")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/jojoldu/freelec-springboot2-webservice",target:"_blank",rel:"noopener noreferrer"}},[a._v("링크"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);