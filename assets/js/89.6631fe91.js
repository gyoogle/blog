(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{530:function(e,t,v){"use strict";v.r(t);var _=v(36),a=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"tls-ssl-handshake"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tls-ssl-handshake"}},[e._v("#")]),e._v(" TLS/SSL HandShake")]),e._v(" "),v("br"),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("HTTPS에서 클라이언트와 서버간 통신 전\nSSL 인증서로 신뢰성 여부를 판단하기 위해 연결하는 방식\n")])])]),v("br"),e._v(" "),v("p",[v("img",{attrs:{src:"https://user-images.githubusercontent.com/34904741/139517776-f2cac636-5ce5-4815-981d-33905283bf13.png",alt:"image"}})]),e._v(" "),v("br"),e._v(" "),v("h3",{attrs:{id:"진행-순서"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#진행-순서"}},[e._v("#")]),e._v(" 진행 순서")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("클라이언트는 서버에게 "),v("code",[e._v("client hello")]),e._v(" 메시지를 담아 서버로 보낸다.\n이때 암호화된 정보를 함께 담는데, "),v("code",[e._v("버전")]),e._v(", "),v("code",[e._v("암호 알고리즘")]),e._v(", "),v("code",[e._v("압축 방식")]),e._v(" 등을 담는다.")]),e._v(" "),v("br")]),e._v(" "),v("li",[v("p",[e._v("서버는 클라이언트가 보낸 암호 알고리즘과 압축 방식을 받고, "),v("code",[e._v("세션 ID")]),e._v("와 "),v("code",[e._v("CA 공개 인증서")]),e._v("를 "),v("code",[e._v("server hello")]),e._v(" 메시지와 함께 담아 응답한다. 이 CA 인증서에는 앞으로 통신 이후 사용할 대칭키가 생성되기 전, 클라이언트에서 handshake 과정 속 암호화에 사용할 공개키를 담고 있다.")]),e._v(" "),v("br")]),e._v(" "),v("li",[v("p",[e._v("클라이언트 측은 서버에서 보낸 CA 인증서에 대해 유효한 지 CA 목록에서 확인하는 과정을 진행한다.")]),e._v(" "),v("br")]),e._v(" "),v("li",[v("p",[e._v("CA 인증서에 대한 신뢰성이 확보되었다면, 클라이언트는 난수 바이트를 생성하여 서버의 공개키로 암호화한다. 이 난수 바이트는 대칭키를 정하는데 사용이 되고, 앞으로 서로 메시지를 통신할 때 암호화하는데 사용된다.")]),e._v(" "),v("br")]),e._v(" "),v("li",[v("p",[e._v("만약 2번 단계에서 서버가 클라이언트 인증서를 함께 요구했다면, 클라이언트의 인증서와 클라이언트의 개인키로 암호화된 임의의 바이트 문자열을 함께 보내준다.")]),e._v(" "),v("br")]),e._v(" "),v("li",[v("p",[e._v("서버는 클라이언트의 인증서를 확인 후, 난수 바이트를 자신의 개인키로 복호화 후 대칭 마스터 키 생성에 활용한다.")]),e._v(" "),v("br")]),e._v(" "),v("li",[v("p",[e._v("클라이언트는 handshake 과정이 완료되었다는 "),v("code",[e._v("finished")]),e._v(" 메시지를 서버에 보내면서, 지금까지 보낸 교환 내역들을 해싱 후 그 값을 대칭키로 암호화하여 같이 담아 보내준다.")]),e._v(" "),v("br")]),e._v(" "),v("li",[v("p",[e._v("서버도 동일하게 교환 내용들을 해싱한 뒤 클라이언트에서 보내준 값과 일치하는 지 확인한다. 일치하면 서버도 마찬가지로  "),v("code",[e._v("finished")]),e._v(" 메시지를 이번에 만든 대칭키로 암호화하여 보낸다.")]),e._v(" "),v("br")]),e._v(" "),v("li",[v("p",[e._v("클라이언트는 해당 메시지를 대칭키로 복호화하여 서로 통신이 가능한 신뢰받은 사용자란 걸 인지하고, 앞으로 클라이언트와 서버는 해당 대칭키로 데이터를 주고받을 수 있게 된다.")])])]),e._v(" "),v("br"),e._v(" "),v("br"),e._v(" "),v("h4",{attrs:{id:"참고-자료"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#참고-자료"}},[e._v("#")]),e._v(" [참고 자료]")]),e._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://wangin9.tistory.com/entry/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%97%90-URL-%EC%9E%85%EB%A0%A5-%ED%9B%84-%EC%9D%BC%EC%96%B4%EB%82%98%EB%8A%94-%EC%9D%BC%EB%93%A4-5TLSSSL-Handshake",target:"_blank",rel:"noopener noreferrer"}},[e._v("링크"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);