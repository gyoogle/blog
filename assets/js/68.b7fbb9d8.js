(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{457:function(a,t,e){"use strict";e.r(t);var v=e(30),_=Object(v.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"트랜잭션-격리-수준-transaction-isolation-level"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#트랜잭션-격리-수준-transaction-isolation-level"}},[a._v("#")]),a._v(" 트랜잭션 격리 수준(Transaction Isolation Level)")]),a._v(" "),e("hr"),a._v(" "),e("br"),a._v(" "),e("h3",{attrs:{id:"isolation-level"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isolation-level"}},[a._v("#")]),a._v(" Isolation level")]),a._v(" "),e("hr"),a._v(" "),e("p",[a._v("트랜잭션에서 일관성 없는 데이터를 허용하도록 하는 수준")]),a._v(" "),e("br"),a._v(" "),e("h3",{attrs:{id:"isolation-level의-필요성"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isolation-level의-필요성"}},[a._v("#")]),a._v(" Isolation level의 필요성")]),a._v(" "),e("hr"),a._v(" "),e("p",[a._v("데이터베이스는 ACID 특징과 같이 트랜잭션이 독립적인 수행을 하도록 한다.")]),a._v(" "),e("p",[a._v("따라서 Locking을 통해, 트랜잭션이 DB를 다루는 동안 다른 트랜잭션이 관여하지 못하도록 막는 것이 필요하다.")]),a._v(" "),e("p",[a._v("하지만 무조건 Locking으로 동시에 수행되는 수많은 트랜잭션들을 순서대로 처리하는 방식으로 구현하게 되면 데이터베이스의 성능은 떨어지게 될 것이다.")]),a._v(" "),e("p",[a._v("그렇다고 해서, 성능을 높이기 위해 Locking의 범위를 줄인다면, 잘못된 값이 처리될 문제가 발생하게 된다.")]),a._v(" "),e("ul",[e("li",[a._v("따라서 최대한 효율적인 Locking 방법이 필요함!")])]),a._v(" "),e("br"),a._v(" "),e("h3",{attrs:{id:"isolation-level-종류"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isolation-level-종류"}},[a._v("#")]),a._v(" Isolation level 종류")]),a._v(" "),e("hr"),a._v(" "),e("ol",[e("li",[e("h4",{attrs:{id:"read-uncommitted-레벨-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#read-uncommitted-레벨-0"}},[a._v("#")]),a._v(" Read Uncommitted (레벨 0)")]),a._v(" "),e("blockquote",[e("p",[a._v("SELECT 문장이 수행되는 동안 해당 데이터에 Shared Lock이 걸리지 않는 계층")])]),a._v(" "),e("p",[a._v("트랜잭션에 처리중이거나, 아직 Commit되지 않은 데이터를 다른 트랜잭션이 읽는 것을 허용함")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("사용자1이 A라는 데이터를 B라는 데이터로 변경하는 동안 사용자2는 아직 완료되지 않은(Uncommitted) 트랜잭션이지만 데이터B를 읽을 수 있다\n")])])]),e("p",[a._v("데이터베이스의 일관성을 유지하는 것이 불가능함")]),a._v(" "),e("br")]),a._v(" "),e("li",[e("h4",{attrs:{id:"read-committed-레벨-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#read-committed-레벨-1"}},[a._v("#")]),a._v(" Read Committed (레벨 1)")]),a._v(" "),e("blockquote",[e("p",[a._v("SELECT 문장이 수행되는 동안 해당 데이터에 Shared Lock이 걸리는 계층")])]),a._v(" "),e("p",[a._v("트랜잭션이 수행되는 동안 다른 트랜잭션이 접근할 수 없어 대기하게 됨")]),a._v(" "),e("p",[a._v("Commit이 이루어진 트랜잭션만 조회 가능")]),a._v(" "),e("p",[a._v("SQL 서버가 Default로 사용하는 Isolation Level임")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("사용자1이 A라는 데이터를 B라는 데이터로 변경하는 동안 사용자2는 해당 데이터에 접근이 불가능함\n")])])]),e("br")]),a._v(" "),e("li",[e("h4",{attrs:{id:"repeatable-read-레벨-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#repeatable-read-레벨-2"}},[a._v("#")]),a._v(" Repeatable Read (레벨 2)")]),a._v(" "),e("blockquote",[e("p",[a._v("트랜잭션이 완료될 때까지 SELECT 문장이 사용하는 모든 데이터에 Shared Lock이 걸리는 계층")])]),a._v(" "),e("p",[a._v("트랜잭션이 범위 내에서 조회한 데이터 내용이 항상 동일함을 보장함")]),a._v(" "),e("p",[a._v("다른 사용자는 트랜잭션 영역에 해당되는 데이터에 대한 수정 불가능")]),a._v(" "),e("br")]),a._v(" "),e("li",[e("h4",{attrs:{id:"serializable-레벨-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#serializable-레벨-3"}},[a._v("#")]),a._v(" Serializable (레벨 3)")]),a._v(" "),e("blockquote",[e("p",[a._v("트랜잭션이 완료될 때까지 SELECT 문장이 사용하는 모든 데이터에 Shared Lock이 걸리는 계층")])]),a._v(" "),e("p",[a._v("완벽한 읽기 일관성 모드를 제공함")]),a._v(" "),e("p",[a._v("다른 사용자는 트랜잭션 영역에 해당되는 데이터에 대한 수정 및 입력 불가능")]),a._v(" "),e("br")])]),a._v(" "),e("br"),a._v(" "),e("p",[e("em",[e("strong",[a._v("선택 시 고려사항")])])]),a._v(" "),e("p",[a._v("Isolation Level에 대한 조정은, 동시성과 데이터 무결성에 연관되어 있음")]),a._v(" "),e("p",[a._v("동시성을 증가시키면 데이터 무결성에 문제가 발생하고, 데이터 무결성을 유지하면 동시성이 떨어지게 됨")]),a._v(" "),e("p",[a._v("레벨을 높게 조정할 수록 발생하는 비용이 증가함")]),a._v(" "),e("br"),a._v(" "),e("h4",{attrs:{id:"낮은-단계-isolation-level을-활용할-때-발생하는-현상들"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#낮은-단계-isolation-level을-활용할-때-발생하는-현상들"}},[a._v("#")]),a._v(" 낮은 단계 Isolation Level을 활용할 때 발생하는 현상들")]),a._v(" "),e("ul",[e("li",[e("p",[e("strong",[a._v("Dirty Read")])]),a._v(" "),e("p",[a._v("커밋되지 않은 수정중인 데이터를 다른 트랜잭션에서 읽을 수 있도록 허용할 때 발생하는 현상")]),a._v(" "),e("p",[a._v("어떤 트랜잭션에서 아직 실행이 끝나지 않은 다른 트랜잭션에 의한 변경사항을 보게되는 경우")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("Non-Repeatable Read")])]),a._v(" "),e("p",[a._v("한 트랜잭션에서 같은 쿼리를 두 번 수행할 때 그 사이에 다른 트랜잭션 값을 수정 또는 삭제하면서 두 쿼리의 결과가 상이하게 나타나는 일관성이 깨진 현상")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("Phantom Read")])]),a._v(" "),e("p",[a._v("한 트랜잭션 안에서 일정 범위의 레코드를 두 번 이상 읽었을 때, 첫번째 쿼리에서 없던 레코드가 두번째 쿼리에서 나타나는 현상")]),a._v(" "),e("p",[a._v("트랜잭션 도중 새로운 레코드 삽입을 허용하기 때문에 나타나는 현상임")])])])])}),[],!1,null,null,null);t.default=_.exports}}]);