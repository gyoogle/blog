(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{324:function(t,s,a){"use strict";a.r(s);var r=a(19),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sql-injection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-injection"}},[t._v("#")]),t._v(" SQL Injection")]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("blockquote",[a("p",[t._v("해커에 의해 조작된 SQL 쿼리문이 데이터베이스에 그대로 전달되어 비정상적 명령을 실행시키는 공격 기법")])]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"공격-방법"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#공격-방법"}},[t._v("#")]),t._v(" 공격 방법")]),t._v(" "),a("h4",{attrs:{id:"_1-인증-우회"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-인증-우회"}},[t._v("#")]),t._v(" 1) 인증 우회")]),t._v(" "),a("p",[t._v("보통 로그인을 할 때, 아이디와 비밀번호를 input 창에 입력하게 된다. 쉽게 이해하기 위해 가벼운 예를 들어보자. 아이디가 abc, 비밀번호가 만약 1234일 때 쿼리는 아래와 같은 방식으로 전송될 것이다.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" PASSWORD "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("SQL Injection으로 공격할 때, input 창에 비밀번호를 입력함과 동시에 다른 쿼리문을 함께 입력하는 것이다.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("보안이 완벽하지 않은 경우, 이처럼 비밀번호가 아이디와 일치해서 True가 되고 뒤에 작성한 DELETE 문도 데이터베이스에 영향을 줄 수도 있게 되는 치명적인 상황이다.")]),t._v(" "),a("p",[t._v("이 밖에도 기본 쿼리문의 WHERE 절에 OR문을 추가하여 "),a("code",[t._v("'1' = '1'")]),t._v("과 같은 true문을 작성하여 무조건 적용되도록 수정한 뒤 DB를 마음대로 조작할 수도 있다.")]),t._v(" "),a("br"),t._v(" "),a("h4",{attrs:{id:"_2-데이터-노출"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-데이터-노출"}},[t._v("#")]),t._v(" 2) 데이터 노출")]),t._v(" "),a("p",[t._v("시스템에서 발생하는 에러 메시지를 이용해 공격하는 방법이다. 보통 에러는 개발자가 버그를 수정하는 면에서 도움을 받을 수 있는 존재다. 해커들은 이를 역이용해 악의적인 구문을 삽입하여 에러를 유발시킨다.")]),t._v(" "),a("p",[t._v("즉 예를 들면, 해커는 "),a("strong",[t._v("GET 방식으로 동작하는 URL 쿼리 스트링을 추가하여 에러를 발생")]),t._v("시킨다. 이에 해당하는 오류가 발생하면, 이를 통해 해당 웹앱의 데이터베이스 구조를 유추할 수 있고 해킹에 활용한다.")]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"방어-방법"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#방어-방법"}},[t._v("#")]),t._v(" 방어 방법")]),t._v(" "),a("h4",{attrs:{id:"_1-input-값을-받을-때-특수문자-여부-검사하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-input-값을-받을-때-특수문자-여부-검사하기"}},[t._v("#")]),t._v(" 1) input 값을 받을 때, 특수문자 여부 검사하기")]),t._v(" "),a("blockquote",[a("p",[t._v("로그인 전, 검증 로직을 추가하여 미리 설정한 특수문자들이 들어왔을 때 요청을 막아낸다.")])]),t._v(" "),a("h4",{attrs:{id:"_2-sql-서버-오류-발생-시-해당하는-에러-메시지-감추기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-sql-서버-오류-발생-시-해당하는-에러-메시지-감추기"}},[t._v("#")]),t._v(" 2) SQL 서버 오류 발생 시, 해당하는 에러 메시지 감추기")]),t._v(" "),a("blockquote",[a("p",[t._v("view를 활용하여 원본 데이터베이스 테이블에는 접근 권한을 높인다. 일반 사용자는 view로만 접근하여 에러를 볼 수 없도록 만든다.")])]),t._v(" "),a("h4",{attrs:{id:"_3-preparestatement-사용하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-preparestatement-사용하기"}},[t._v("#")]),t._v(" 3) preparestatement 사용하기")]),t._v(" "),a("blockquote",[a("p",[t._v("preparestatement를 사용하면, 특수문자를 자동으로 escaping 해준다. (statement와는 다르게 쿼리문에서 전달인자 값을 "),a("code",[t._v("?")]),t._v("로 받는 것) 이를 활용해 서버 측에서 필터링 과정을 통해서 공격을 방어한다.")])])])}),[],!1,null,null,null);s.default=e.exports}}]);