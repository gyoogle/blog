(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{445:function(s,a,t){"use strict";t.r(a);var n=t(12),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"aws-스프링-부트-배포-스크립트-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aws-스프링-부트-배포-스크립트-생성"}},[s._v("#")]),s._v(" [AWS] 스프링 부트 배포 스크립트 생성")]),s._v(" "),a("br"),s._v(" "),a("img",{attrs:{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FufFpw%2FbtrfolbIEVG%2F5U2LKUjUUKYKODQwmh7uf0%2Fimg.png"}}),s._v(" "),a("br"),s._v(" "),a("p",[s._v("AWS에서 프로젝트를 배포하는 과정은 프로젝트가 수정할 때마다 똑같은 일을 반복해야한다.")]),s._v(" "),a("h4",{attrs:{id:"프로젝트-배포-과정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#프로젝트-배포-과정"}},[s._v("#")]),s._v(" 프로젝트 배포 과정")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("git pull")]),s._v("로 프로젝트 업데이트")]),s._v(" "),a("li",[s._v("gradle 프로젝트 빌드")]),s._v(" "),a("li",[s._v("ec2 인스턴스 서버에서 프로젝트 실행 및 배포")])]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("이를 자동화 시킬 수 있다면 편리할 것이다. 따라서 배포에 필요한 쉘 스크립트를 생성해보자.")]),s._v(" "),a("p",[a("code",[s._v("deploy.sh")]),s._v(" 파일을 ec2 상에서 생성하여 아래와 같이 작성한다.")]),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REPOSITORY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/home/ec2-user/app/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("clone한 프로젝트 저장한 경로"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PROJECT_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("프로젝트명"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PROJECT_NAME")]),s._v("/\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> Git Pull"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> 프로젝트 Build 시작"')]),s._v("\n\n./gradlew build\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> step1 디렉토리로 이동"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> Build 파일 복사"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PROJECT_NAME")]),s._v("/build/libs/*.jar "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v("/\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> 현재 구동중인 애플리케이션 pid 확인"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CURRENT_PID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("pgrep -f $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("PROJECT_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".*.jar"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"현재 구동 중인 애플리케이션 pid: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CURRENT_PID")]),s._v('"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -z "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CURRENT_PID")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> 현재 구동 중인 애플리케이션이 없으므로 종료하지 않습니다."')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> kill -15 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CURRENT_PID")]),s._v('"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" -15 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CURRENT_PID")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> 새 애플리케이션 배포"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAR_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -tr $REPOSITORY/ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" jar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" -n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> JAR Name: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAR_NAME")]),s._v('"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" java -jar "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n       -Dspring.config.location"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("classpath:/application.properties,classpath:/application-real.properties,/home/ec2-user/app/application-oauth.properties,/home/ec2-user/app/application-real-db.properties "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n       -Dspring.profiles.active"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("real "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAR_NAME")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])])]),a("br"),s._v(" "),a("p",[s._v("쉘 스크립트 내 경로명 같은 경우에는 사용자의 환경마다 다를 수 있으므로 확인 후 진행하도록 하자.")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("스크립트 순서대로 간단히 설명하면 아래와 같다.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REPOSITORY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/home/ec2-user/app/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("clone한 프로젝트 저장한 경로"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PROJECT_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("프로젝트명"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("자주 사용하는 프로젝트 명을 변수명으로 저장해둔 것이다.")]),s._v(" "),a("p",[a("code",[s._v("REPOSITORY")]),s._v("는 ec2 서버 내에서 본인이 git 프로젝트를 clone한 곳의 경로로 지정하며, "),a("code",[s._v("PROJECT_NAME")]),s._v("은 해당 프로젝트명을 입력하자.")]),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"language-SH extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> Git Pull"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> 프로젝트 Build 시작"')]),s._v("\n\n./gradlew build\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> step1 디렉토리로 이동"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> Build 파일 복사"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PROJECT_NAME")]),s._v("/build/libs/*.jar "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v("/\n")])])]),a("br"),s._v(" "),a("p",[s._v("현재 해당 경로는 clone한 곳이기 때문에 바로 "),a("code",[s._v("git pull")]),s._v("이 가능하다. 프로젝트의 변경사항을 ec2 인스턴스 서버 내의 코드에도 update를 시켜주기 위해 pull을 진행한다.")]),s._v(" "),a("p",[s._v("그 후 프로젝트 빌드를 진행한 뒤, 생성된 jar 파일을 현재 REPOSITORY 경로로 복사해서 가져오도록 설정했다.")]),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CURRENT_PID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("pgrep -f $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("PROJECT_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".*.jar"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"현재 구동 중인 애플리케이션 pid: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CURRENT_PID")]),s._v('"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -z "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CURRENT_PID")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> 현재 구동 중인 애플리케이션이 없으므로 종료하지 않습니다."')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> kill -15 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CURRENT_PID")]),s._v('"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" -15 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CURRENT_PID")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),a("br"),s._v(" "),a("p",[s._v("기존에 수행 중인 프로젝트를 종료 후 재실행해야 되기 때문에 pid 값을 얻어내 kill 하는 과정을 진행한다.")]),s._v(" "),a("p",[s._v("현재 구동 중인 여부를 확인하기 위해서 "),a("code",[s._v("if else fi")]),s._v("로 체크하게 된다. 만약 존재하면 해당 pid 값에 해당하는 프로세스를 종료시킨다.")]),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> JAR Name: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAR_NAME")]),s._v('"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" java -jar "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n       -Dspring.config.location"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("classpath:/application.properties,classpath:/application-real.properties,/home/ec2-user/app/application-oauth.properties,/home/ec2-user/app/application-real-db.properties "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n       -Dspring.profiles.active"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("real "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAR_NAME")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])])]),a("br"),s._v(" "),a("p",[a("code",[s._v("nohup")]),s._v(" 명령어는 터미널 종료 이후에도 애플리케이션이 계속 구동될 수 있도록 해준다. 따라서 이후에 ec2-user 터미널을 종료해도 현재 실행한 프로젝트 경로에 접속이 가능하다.")]),s._v(" "),a("p",[a("code",[s._v("-Dspring.config.location")]),s._v("으로 처리된 부분은 우리가 git에 프로젝트를 올릴 때 보안상의 이유로 "),a("code",[s._v(".gitignore")]),s._v("로 제외시킨 파일들을 따로 등록하고, jar 내부에 존재하는 properties를 적용하기 위함이다.")]),s._v(" "),a("p",[s._v("예제와 같이 "),a("code",[s._v("application-oauth.properties")]),s._v(", "),a("code",[s._v("application-real-db.properties")]),s._v("는 git으로 올라와 있지 않아 따로 ec2 서버에 사용자가 직접 생성한 외부 파일이므로, 절대경로를 통해 입력해줘야 한다.")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("프로젝트의 수정사항이 생기면, EC2 인스턴스 서버에서 "),a("code",[s._v("deploy.sh")]),s._v("를 실행해주면, 차례대로 명령어가 실행되면서 수정된 사항을 배포할 수 있다.")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h4",{attrs:{id:"참고-사항"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#참고-사항"}},[s._v("#")]),s._v(" [참고 사항]")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/jojoldu/freelec-springboot2-webservice",target:"_blank",rel:"noopener noreferrer"}},[s._v("링크"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);